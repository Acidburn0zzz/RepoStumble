#pragma warning disable 1591
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace RepositoryStumble.Views
{
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;


[System.CodeDom.Compiler.GeneratedCodeAttribute("RazorTemplatePreprocessor", "2.6.0.0")]
public partial class ReadmeRazorView : ReadmeRazorViewBase
{

#line hidden

#line 1 "ReadmeRazorView.cshtml"
public string Model { get; set; }

#line default
#line hidden


public override void Execute()
{
WriteLiteral("<html><head>\n<meta");

WriteLiteral(" name=\"viewport\"");

WriteLiteral(" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable" +
"=0\"");

WriteLiteral("/>\n<style>\n* {\nbox-sizing: border-box;\n}\nbody, html {\n\tpadding: 0;\n\tmargin: 0;\n}\n" +
"body {\ncolor: #333;\nfont-family: Helvetica, Arial, sans-serif;\nline-height: 1.42" +
";\n}\n.markdown-body {\npadding: 1px 5px;\nfont-size: 15px;\nline-height: 1.7;\noverfl" +
"ow: hidden;\nword-wrap: break-word;\n}\n.markdown-body h1, .markdown-body h2, .mark" +
"down-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 {\nmargin: " +
"1em 0 15px;\npadding: 0;\nfont-weight: bold;\nline-height: 1.7;\ncursor: text;\nposit" +
"ion: relative;\n}\n.markdown-body h1 {\nfont-size: 1.8em;\nborder-bottom: 1px solid " +
"#ddd;\n}\n.markdown-body p, .markdown-body blockquote, .markdown-body ul, .markdow" +
"n-body ol, .markdown-body dl, .markdown-body table, .markdown-body pre {\nmargin:" +
" 15px 0;\n}\n.markdown-body h2 {\nfont-size: 1.4em;\nborder-bottom: 1px solid #eee;\n" +
"}\n.markdown-body ul, .markdown-body ol {\npadding-left: 30px;\n}\na {\ncolor: #4183c" +
"4;\ntext-decoration: none;\ntext-decoration: none;\n}\n.markdown-body .highlight pre" +
", .markdown-body pre {\nbackground-color: #f8f8f8;\nborder: 1px solid #ddd;\nfont-s" +
"ize: 13px;\nline-height: 19px;\noverflow: auto;\npadding: 6px 10px;\nborder-radius: " +
"3px;\n}\n.markdown-body pre {\nword-wrap: normal;\n}\n.markdown-body dl {\npadding: 0;" +
"\n}\n.markdown-body dl dt {\nfont-size: 14px;\nfont-weight: bold;\nfont-style: italic" +
";\npadding: 0;\nmargin-top: 15px;\n}\n.markdown-body dl dd {\nmargin-bottom: 15px;\npa" +
"dding: 0 15px;\n}\n.markdown-body table {\nwidth: 100%;\noverflow: auto;\ndisplay: bl" +
"ock;\n}\n.markdown-body table tr {\nborder-top: 1px solid #ccc;\nbackground-color: #" +
"fff;\n}\n.markdown-body table tr:nth-child(2n) {\nbackground-color: #f8f8f8;\n}\n.mar" +
"kdown-body table th, .markdown-body table td {\nborder: 1px solid #ddd;\npadding: " +
"6px 13px;\n}\n.markdown-body table th {\nfont-weight: bold;\n}\n.markdown-body img { " +
"scroll\nmax-width: 100%;\n-moz-box-sizing: border-box;\nbox-sizing: border-box;\n}\n\n" +
"#welcome {\n\tbackground-color: #4e4bbe;\n\tpadding: 15px;\n\tcolor: white;\n}\n#welcome" +
" img {\n\twidth: 80px;\n\theight: 80px;\n\tmargin-bottom: 10px;\n\tdisplay: block;\n\tbord" +
"er-radius: 40px;\n\tborder: 2px solid white;\n}\n#name {\n\tfont-weight: bold;\n\tfont-s" +
"ize: 1.2em;\n}\n#stats {\n\tborder-top: 1px solid #d6d6d6;\n\tborder-bottom: 1px solid" +
" #d6d6d6;\n\tdisplay: -webkit-flex;\n\tdisplay: flex;\n\tflex-direction: row;\n}\n#stats" +
" .item {\n\twidth: 33%;\n\tpadding: 3px 12px;\n\tfont-size: 14px;\n}\n#stats * {\n\tcolor:" +
" #282828;\n}\n#stars, #forks, #contrib {\n\tcolor: #5B5B5B;\n}\n.border-left {\n\tborder" +
"-left: 1px solid #d6d6d6;\n}\n\n");

WriteLiteral("@-webkit-keyframes throbber-loader {\n  0% {\n    background: #dde2e7;\n  }\n  10% {\n" +
"    background: #6b9dc8;\n  }\n  40% {\n    background: #dde2e7;\n  }\n}\n");

WriteLiteral("@keyframes throbber-loader {\n  0% {\n    background: #dde2e7;\n  }\n  10% {\n    back" +
"ground: #6b9dc8;\n  }\n  40% {\n    background: #dde2e7;\n  }\n}\n");

WriteLiteral("@-webkit-keyframes three-quarters-loader {\n  0% {\n    -webkit-transform: rotate(0" +
"deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(36" +
"0deg);\n    transform: rotate(360deg);\n  }\n}\n");

WriteLiteral(@"@keyframes three-quarters-loader {
  0% {
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
/* :not(:required) hides this rule from IE9 and below */
.three-quarters-loader:not(:required) {
  -moz-animation: three-quarters-loader 1250ms infinite linear;
  -webkit-animation: three-quarters-loader 1250ms infinite linear;
  animation: three-quarters-loader 1250ms infinite linear;
  border: 8px solid #4e4bbe;
  border-right-color: transparent;
  border-radius: 16px;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  overflow: hidden;
  text-indent: -9999px;
  width: 32px;
  height: 32px;
  margin-top: 25px;
}

</style>
<title>Readme</title></head>
<body>
	<div");

WriteLiteral(" id=\"welcome\"");

WriteLiteral(">\n\t\t <center>\n\t\t\t<img");

WriteLiteral(" id=\"guy\"");

WriteLiteral(">\n\t\t\t<div");

WriteLiteral(" id=\"name\"");

WriteLiteral("></div>\n\t\t\t<div");

WriteLiteral(" id=\"desc\"");

WriteLiteral("></div>\n\t\t</center>\n\t</div>\n\t<div");

WriteLiteral(" id=\"stats\"");

WriteLiteral(">\n\t\t<div");

WriteLiteral(" class=\"item\"");

WriteLiteral(">\n\t\t\t<div");

WriteLiteral(" id=\"stars\"");

WriteLiteral(">-</div>\n\t\t\t<div>Stargazers</div>\n\t\t</div>\n\t\t<div");

WriteLiteral(" class=\"item border-left\"");

WriteLiteral(">\n\t\t\t<div");

WriteLiteral(" id=\"forks\"");

WriteLiteral(">-</div>\n\t\t\t<div>Forks</div>\n\t\t</div>\n\t\t<div");

WriteLiteral(" class=\"item  border-left\"");

WriteLiteral(">\n\t\t\t<div");

WriteLiteral(" id=\"contrib\"");

WriteLiteral(">-</div>\n\t\t\t<div>Contributors</div>\n\t\t</div>\n\t</div>\n<div");

WriteLiteral(" id=\"main\"");

WriteLiteral(" class=\"markdown-body\"");

WriteLiteral(">\n<center>\n<div");

WriteLiteral(" class=\"three-quarters-loader\"");

WriteLiteral(">\n  Loadingâ€¦\n</div>\n</center>\n</div>\n<script");

WriteLiteral(" src=\"https://code.jquery.com/jquery-2.1.4.min.js\"");

WriteLiteral(@"></script>
<script>
function setBody(body) {
	$('#main').html(body);
}
function setRepository(repo) {
	$('#guy').attr('src', repo.Owner.AvatarUrl);
	$('#desc').text(repo.Description);
	$('#name').text(repo.Name);
	$('#stars').text(repo.StargazersCount);
	$('#forks').text(repo.ForksCount);
}
function setContrib(contrib) {
	$('#contrib').text(contrib);

}
</script>
</body>
</html>");

}
}

// NOTE: this is the default generated helper class. You may choose to extract it to a separate file 
// in order to customize it or share it between multiple templates, and specify the template's base 
// class via the @inherits directive.
public abstract class ReadmeRazorViewBase
{

		// This field is OPTIONAL, but used by the default implementation of Generate, Write, WriteAttribute and WriteLiteral
		//
		System.IO.TextWriter __razor_writer;

		// This method is OPTIONAL
		//
		/// <summary>Executes the template and returns the output as a string.</summary>
		/// <returns>The template output.</returns>
		public string GenerateString ()
		{
			using (var sw = new System.IO.StringWriter ()) {
				Generate (sw);
				return sw.ToString ();
			}
		}

		// This method is OPTIONAL, you may choose to implement Write and WriteLiteral without use of __razor_writer
		// and provide another means of invoking Execute.
		//
		/// <summary>Executes the template, writing to the provided text writer.</summary>
		/// <param name="writer">The TextWriter to which to write the template output.</param>
		public void Generate (System.IO.TextWriter writer)
		{
			__razor_writer = writer;
			Execute ();
			__razor_writer = null;
		}

		// This method is REQUIRED, but you may choose to implement it differently
		//
		/// <summary>Writes a literal value to the template output without HTML escaping it.</summary>
		/// <param name="value">The literal value.</param>
		protected void WriteLiteral (string value)
		{
			__razor_writer.Write (value);
		}

		// This method is REQUIRED if the template contains any Razor helpers, but you may choose to implement it differently
		//
		/// <summary>Writes a literal value to the TextWriter without HTML escaping it.</summary>
		/// <param name="writer">The TextWriter to which to write the literal.</param>
		/// <param name="value">The literal value.</param>
		protected static void WriteLiteralTo (System.IO.TextWriter writer, string value)
		{
			writer.Write (value);
		}

		// This method is REQUIRED, but you may choose to implement it differently
		//
		/// <summary>Writes a value to the template output, HTML escaping it if necessary.</summary>
		/// <param name="value">The value.</param>
		/// <remarks>The value may be a Action<System.IO.TextWriter>, as returned by Razor helpers.</remarks>
		protected void Write (object value)
		{
			WriteTo (__razor_writer, value);
		}

		// This method is REQUIRED if the template contains any Razor helpers, but you may choose to implement it differently
		//
		/// <summary>Writes an object value to the TextWriter, HTML escaping it if necessary.</summary>
		/// <param name="writer">The TextWriter to which to write the value.</param>
		/// <param name="value">The value.</param>
		/// <remarks>The value may be a Action<System.IO.TextWriter>, as returned by Razor helpers.</remarks>
		protected static void WriteTo (System.IO.TextWriter writer, object value)
		{
			if (value == null)
				return;

			var write = value as Action<System.IO.TextWriter>;
			if (write != null) {
				write (writer);
				return;
			}

			//NOTE: a more sophisticated implementation would write safe and pre-escaped values directly to the
			//instead of double-escaping. See System.Web.IHtmlString in ASP.NET 4.0 for an example of this.
			writer.Write(System.Net.WebUtility.HtmlEncode (value.ToString ()));
		}

		// This method is REQUIRED, but you may choose to implement it differently
		//
		/// <summary>
		/// Conditionally writes an attribute to the template output.
		/// </summary>
		/// <param name="name">The name of the attribute.</param>
		/// <param name="prefix">The prefix of the attribute.</param>
		/// <param name="suffix">The suffix of the attribute.</param>
		/// <param name="values">Attribute values, each specifying a prefix, value and whether it's a literal.</param>
		protected void WriteAttribute (string name, string prefix, string suffix, params Tuple<string,object,bool>[] values)
		{
			WriteAttributeTo (__razor_writer, name, prefix, suffix, values);
		}

		// This method is REQUIRED if the template contains any Razor helpers, but you may choose to implement it differently
		//
		/// <summary>
		/// Conditionally writes an attribute to a TextWriter.
		/// </summary>
		/// <param name="writer">The TextWriter to which to write the attribute.</param>
		/// <param name="name">The name of the attribute.</param>
		/// <param name="prefix">The prefix of the attribute.</param>
		/// <param name="suffix">The suffix of the attribute.</param>
		/// <param name="values">Attribute values, each specifying a prefix, value and whether it's a literal.</param>
		///<remarks>Used by Razor helpers to write attributes.</remarks>
		protected static void WriteAttributeTo (System.IO.TextWriter writer, string name, string prefix, string suffix, params Tuple<string,object,bool>[] values)
		{
			// this is based on System.Web.WebPages.WebPageExecutingBase
			// Copyright (c) Microsoft Open Technologies, Inc.
			// Licensed under the Apache License, Version 2.0
			if (values.Length == 0) {
				// Explicitly empty attribute, so write the prefix and suffix
				writer.Write (prefix);
				writer.Write (suffix);
				return;
			}

			bool first = true;
			bool wroteSomething = false;

			for (int i = 0; i < values.Length; i++) {
				Tuple<string,object,bool> attrVal = values [i];
				string attPrefix = attrVal.Item1;
				object value = attrVal.Item2;
				bool isLiteral = attrVal.Item3;

				if (value == null) {
					// Nothing to write
					continue;
				}

				// The special cases here are that the value we're writing might already be a string, or that the 
				// value might be a bool. If the value is the bool 'true' we want to write the attribute name instead
				// of the string 'true'. If the value is the bool 'false' we don't want to write anything.
				//
				// Otherwise the value is another object (perhaps an IHtmlString), and we'll ask it to format itself.
				string stringValue;
				bool? boolValue = value as bool?;
				if (boolValue == true) {
					stringValue = name;
				} else if (boolValue == false) {
					continue;
				} else {
					stringValue = value as string;
				}

				if (first) {
					writer.Write (prefix);
					first = false;
				} else {
					writer.Write (attPrefix);
				}

				if (isLiteral) {
					writer.Write (stringValue ?? value);
				} else {
					WriteTo (writer, stringValue ?? value);
				}
				wroteSomething = true;
			}
			if (wroteSomething) {
				writer.Write (suffix);
			}
		}
		// This method is REQUIRED. The generated Razor subclass will override it with the generated code.
		//
		///<summary>Executes the template, writing output to the Write and WriteLiteral methods.</summary>.
		///<remarks>Not intended to be called directly. Call the Generate method instead.</remarks>
		public abstract void Execute ();

}
}
#pragma warning restore 1591
